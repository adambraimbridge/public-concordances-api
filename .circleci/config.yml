version: 2
jobs:
  build:
    docker:
      - image: golang:1
      - image: neo4j:3.4.10-enterprise
        environment:
          NEO4J_AUTH: none
          NEO4J_HEAP_MEMORY: 256
          NEO4J_CACHE_MEMORY: 256M
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"

    working_directory: /go/src/github.com/Financial-Times/public-concordances-api
    environment:
      CIRCLE_TEST_REPORTS: /tmp/test-reports
      CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
      NEO4J_TEST_URL: "http://localhost:7474/db/data/"

    steps:
      - checkout
      - run:
         name: Create test folder
         command: |
           mkdir -p ${CIRCLE_TEST_REPORTS}
           mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: External Dependancies
          command: |
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            go get -u github.com/jstemmer/go-junit-report
            go get -u github.com/mattn/goveralls
      - run:
          name: Dowload vendored dependancies
          command: dep ensure -v -vendor-only
      - run:
          name: Build service
          command: go build -v
      - run:
          name: Wait for Neo to be available
          command: wget --retry-connrefused --no-check-certificate -T 60 $NEO4J_TEST_URL; curl $NEO4J_TEST_URL
      - run:
          name: Run tests and coverage
          command: go test ./... -v -race -cover -coverprofile=$CIRCLE_COVERAGE_REPORT/coverage.out | go-junit-report > $CIRCLE_TEST_REPORTS/junit.xml
      - run:
          name: Upload to coveralls
          command: goveralls -coverprofile=$CIRCLE_COVERAGE_REPORT/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - store_test_results:
          path: /tmp/test-reports
  docker_build:
    working_directory: /public-concordances-api
    docker:
      - image: docker:18.03
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .

workflows:
  version: 2
  tests_and_docker:
    jobs:
      - build
      - docker_build:
          requires:
            - build
